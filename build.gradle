buildscript {
    ext {
        springBootVersion = '1.4.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven {url 'http://repo.spring.io/libs-snapshot'}
        maven {url 'https://plugins.gradle.org/m2/'}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath ('com.moowork.gradle:gradle-node-plugin:0.12')
        classpath ('com.moowork.gradle:gradle-grunt-plugin:0.12')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'
apply plugin: 'com.moowork.grunt'

jar {
    baseName = 'enkive'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {url 'http://repo.spring.io/libs-snapshot'}
    maven { url 'http://repository.jboss.org/nexus/content/groups/public'}
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
    compile('org.projectlombok:lombok:1.16.8')
    compile('org.apache.james:apache-mime4j:0.8.0-SNAPSHOT')
    compile('commons-io:commons-io:2.4')
    compile('com.googlecode.java-diff-utils:diffutils:1.3.0')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

grunt {
    workDir = file("src/angular")
    colors = true
    bufferOutput = false
}

node {
    version = '4.4.3'
    npmVersion = '3.8.8'
    download = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

//Generate dist here

task copyDist(type: Copy) {
    dependsOn grunt_build
    from 'src/angular/dist'
    into 'src/main/resources/angular'
}

task cleanDist(type: Delete) {
    delete 'src/main/resources/angular'
}
grunt_build.dependsOn 'installGrunt'
grunt_build.dependsOn 'npmInstall'
grunt_build.dependsOn 'grunt_bower_install'
grunt_bower_install.dependsOn 'installGrunt'
grunt_bower_install.dependsOn 'npmInstall'

build.dependsOn copyDist
clean.dependsOn cleanDist

task stage {
    dependsOn build
}

check.dependsOn jacocoTestReport

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}